# Before creating the stuff, must create the namespace as ingress-nginx
# kubectl create namespace ingress-nginx
# this url is belongs to nginx ingress controller
# apply this below url in eks as kubectl apply -f <ingress-controller-url>
# https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.1/deploy/static/provider/cloud/deploy.yaml
# kubectl get svc -n ingress-nginx, spits the load balancer in the aws UI
# kubectl get all -n ingress-nginx
# kubectl get ingress and kubectl get svc -n ingress-nginx(has the same load balancer)
apiVersion: networking.k8s.io/v1 # to check this on kubernetes cluster kubectl get ingress
kind: Ingress #this is a ingress resource defintion but not the ingress controller defintion, kubectl get ingress, it also spits the load balancer in the aws UI
metadata:
  name: k8s-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths: # path based routing(sudhamsh.com/keyword(nginx/httpd)), also we have the host based routing(sudhamsh.com)
      - path: /nginx(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: nginx # in our case it's dep_one.yml
            port:
              number: 80
      - path: /httpd(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: httpd # in our case it's dep_two.yml
            port:
              number: 80
      - path: /(.*) # when is there is no keyword is specified it should hit nginx service
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80